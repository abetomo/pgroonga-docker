name: Test
on:
  schedule:
    - cron: |
        0 0 * * *
  workflow_dispatch:
concurrency:
  group: test
  cancel-in-progress: true
jobs:
  run:
    name: ${{ matrix.id }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        id:
          - "alpine-15"
          - "alpine-14"
          - "alpine-13"
          - "alpine-12"
          - "alpine-11"
          - "alpine-15-slim"
          - "alpine-14-slim"
          - "alpine-13-slim"
          - "alpine-12-slim"
          - "alpine-11-slim"
          - "debian-15"
          - "debian-14"
          - "debian-13"
          - "debian-12"
    steps:
      - name: Install dependencies
        run: |
          sudo apt -u -V install \
            curl \
            jq \
            postgresql-client
      - name: Detect the latest release
        run: |
          set -o pipefail
          curl \
            --fail-with-body \
            https://api.github.com/repos/pgroonga/pgroonga/releases/latest | \
              tee releases.json
          latest_version=$(jq -r .tag_name releases.json)
          echo "LATEST_VERSION=${latest_version}" >> $GITHUB_ENV
      - name: Check PGroonga version
        env:
          PGPASSWORD: pgroonga
        run: |
          tag="${LATEST_VERSION}-${{ matrix.id }}"
          docker_image="groonga/pgroonga:${tag}"
          sudo docker run \
            -d \
            -e POSTGRES_DB=pgroonga \
            -e POSTGRES_PASSWORD=${PGPASSWORD} \
            -e POSTGRES_USER=pgroonga \
            -p 5432:5432 \
            ${docker_image}
          for i in {1..60}; do
            if pg_isready -h 127.0.0.1; then
              break
            fi
            sleep 1
          done
          if [ $i -eq 60 ]; then
            echo "PostgreSQL isn't available"
            exit 1
          fi
          psql \
            -h 127.0.0.1 \
            -U pgroonga \
            -c "CREATE EXTENSION pgroonga;"
          pgroonga_version=$( \
            psql \
              -h 127.0.0.1 \
              -U pgroonga \
              -t \
              -A \
              -c "SELECT extversion FROM pg_catalog.pg_extension WHERE extname = 'pgroonga';" \
          )
          set -x
          [ "${LATEST_VERSION}" = "${pgroonga_version}" ]
